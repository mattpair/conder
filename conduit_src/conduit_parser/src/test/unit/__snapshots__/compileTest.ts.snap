// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Field referencing 1`] = `
Object {
  "inScope": EntityMap {
    "map": Map {
      "Outermost" => Object {
        "children": Object {
          "Field": Array [
            Object {
              "kind": "Field",
              "loc": Object {
                "endColNumber": 16,
                "endLineNumber": 2,
                "startColNumber": 22,
                "startLineNumber": 1,
              },
              "name": "middle",
              "part": Object {
                "CompleteType": Object {
                  "differentiate": [Function],
                  "kind": "CompleteType",
                },
              },
            },
          ],
        },
        "kind": "Struct",
        "loc": Object {
          "endColNumber": 22,
          "endLineNumber": 1,
          "startColNumber": 0,
          "startLineNumber": 0,
        },
        "name": "Outermost",
        "schema": Object {
          "data": Object {
            "middle": Object {
              "data": Object {
                "inner": Object {
                  "data": Object {
                    "f": Object {
                      "data": null,
                      "kind": "string",
                    },
                  },
                  "kind": "Object",
                },
              },
              "kind": "Object",
            },
          },
          "kind": "Object",
        },
      },
      "Middle" => Object {
        "children": Object {
          "Field": Array [
            Object {
              "kind": "Field",
              "loc": Object {
                "endColNumber": 15,
                "endLineNumber": 6,
                "startColNumber": 19,
                "startLineNumber": 5,
              },
              "name": "inner",
              "part": Object {
                "CompleteType": Object {
                  "differentiate": [Function],
                  "kind": "CompleteType",
                },
              },
            },
          ],
        },
        "kind": "Struct",
        "loc": Object {
          "endColNumber": 19,
          "endLineNumber": 5,
          "startColNumber": 5,
          "startLineNumber": 3,
        },
        "name": "Middle",
        "schema": Object {
          "data": Object {
            "inner": Object {
              "data": Object {
                "f": Object {
                  "data": null,
                  "kind": "string",
                },
              },
              "kind": "Object",
            },
          },
          "kind": "Object",
        },
      },
      "Innermost" => Object {
        "children": Object {
          "Field": Array [
            Object {
              "kind": "Field",
              "loc": Object {
                "endColNumber": 11,
                "endLineNumber": 9,
                "startColNumber": 22,
                "startLineNumber": 8,
              },
              "name": "f",
              "part": Object {
                "CompleteType": Object {
                  "differentiate": [Function],
                  "kind": "CompleteType",
                },
              },
            },
          ],
        },
        "kind": "Struct",
        "loc": Object {
          "endColNumber": 22,
          "endLineNumber": 8,
          "startColNumber": 5,
          "startLineNumber": 7,
        },
        "name": "Innermost",
        "schema": Object {
          "data": Object {
            "f": Object {
              "data": null,
              "kind": "string",
            },
          },
          "kind": "Object",
        },
      },
      "getAllDataIntermediate" => Object {
        "body": Array [
          Object {
            "differentiate": [Function],
            "kind": "Statement",
          },
        ],
        "kind": "Function",
        "loc": Object {
          "endColNumber": 35,
          "endLineNumber": 12,
          "startColNumber": 5,
          "startLineNumber": 10,
        },
        "method": "POST",
        "name": "getAllDataIntermediate",
        "parameter": Object {
          "kind": "WithParam",
          "name": "input",
          "schema": Object {
            "data": Object {
              "middle": Object {
                "data": Object {
                  "inner": Object {
                    "data": Object {
                      "f": Object {
                        "data": null,
                        "kind": "string",
                      },
                    },
                    "kind": "Object",
                  },
                },
                "kind": "Object",
              },
            },
            "kind": "Object",
          },
        },
        "part": Object {
          "FunctionBody": Object {
            "children": Object {
              "Statement": Array [
                Object {
                  "differentiate": [Function],
                  "kind": "Statement",
                },
              ],
            },
            "kind": "FunctionBody",
            "loc": Object {
              "endColNumber": 66,
              "endLineNumber": 12,
              "startColNumber": 64,
              "startLineNumber": 12,
            },
          },
          "Parameter": Object {
            "differentiate": [Function],
            "kind": "Parameter",
          },
          "ReturnTypeSpec": Object {
            "differentiate": [Function],
            "kind": "ReturnTypeSpec",
          },
        },
        "returnType": Object {
          "data": Object {
            "f": Object {
              "data": null,
              "kind": "string",
            },
          },
          "kind": "Object",
        },
      },
    },
    "size": 4,
  },
  "schemaFactory": [Function],
}
`;

exports[`May assign stores and inputs to variables 1`] = `
Object {
  "inScope": EntityMap {
    "map": Map {
      "stored" => Object {
        "children": Object {
          "Field": Array [
            Object {
              "kind": "Field",
              "loc": Object {
                "endColNumber": 11,
                "endLineNumber": 2,
                "startColNumber": 19,
                "startLineNumber": 1,
              },
              "name": "s",
              "part": Object {
                "CompleteType": Object {
                  "differentiate": [Function],
                  "kind": "CompleteType",
                },
              },
            },
          ],
        },
        "kind": "Struct",
        "loc": Object {
          "endColNumber": 19,
          "endLineNumber": 1,
          "startColNumber": 0,
          "startLineNumber": 0,
        },
        "name": "stored",
        "schema": Object {
          "data": Object {
            "s": Object {
              "data": null,
              "kind": "string",
            },
          },
          "kind": "Object",
        },
      },
      "getAllDataIntermediate" => Object {
        "body": Array [
          Object {
            "differentiate": [Function],
            "kind": "Statement",
          },
          Object {
            "differentiate": [Function],
            "kind": "Statement",
          },
        ],
        "kind": "Function",
        "loc": Object {
          "endColNumber": 35,
          "endLineNumber": 7,
          "startColNumber": 35,
          "startLineNumber": 5,
        },
        "method": "GET",
        "name": "getAllDataIntermediate",
        "parameter": Object {
          "kind": "NoParameter",
          "loc": Object {
            "endColNumber": 37,
            "endLineNumber": 7,
            "startColNumber": 35,
            "startLineNumber": 7,
          },
        },
        "part": Object {
          "FunctionBody": Object {
            "children": Object {
              "Statement": Array [
                Object {
                  "differentiate": [Function],
                  "kind": "Statement",
                },
                Object {
                  "differentiate": [Function],
                  "kind": "Statement",
                },
              ],
            },
            "kind": "FunctionBody",
            "loc": Object {
              "endColNumber": 54,
              "endLineNumber": 7,
              "startColNumber": 52,
              "startLineNumber": 7,
            },
          },
          "Parameter": Object {
            "differentiate": [Function],
            "kind": "Parameter",
          },
          "ReturnTypeSpec": Object {
            "differentiate": [Function],
            "kind": "ReturnTypeSpec",
          },
        },
        "returnType": Object {
          "data": Array [
            Object {
              "data": Object {
                "s": Object {
                  "data": null,
                  "kind": "string",
                },
              },
              "kind": "Object",
            },
          ],
          "kind": "Array",
        },
      },
      "returnInputIntermediate" => Object {
        "body": Array [
          Object {
            "differentiate": [Function],
            "kind": "Statement",
          },
          Object {
            "differentiate": [Function],
            "kind": "Statement",
          },
        ],
        "kind": "Function",
        "loc": Object {
          "endColNumber": 36,
          "endLineNumber": 12,
          "startColNumber": 5,
          "startLineNumber": 10,
        },
        "method": "POST",
        "name": "returnInputIntermediate",
        "parameter": Object {
          "kind": "WithParam",
          "name": "i",
          "schema": Object {
            "data": Array [
              Object {
                "data": Object {
                  "s": Object {
                    "data": null,
                    "kind": "string",
                  },
                },
                "kind": "Object",
              },
            ],
            "kind": "Array",
          },
        },
        "part": Object {
          "FunctionBody": Object {
            "children": Object {
              "Statement": Array [
                Object {
                  "differentiate": [Function],
                  "kind": "Statement",
                },
                Object {
                  "differentiate": [Function],
                  "kind": "Statement",
                },
              ],
            },
            "kind": "FunctionBody",
            "loc": Object {
              "endColNumber": 71,
              "endLineNumber": 12,
              "startColNumber": 69,
              "startLineNumber": 12,
            },
          },
          "Parameter": Object {
            "differentiate": [Function],
            "kind": "Parameter",
          },
          "ReturnTypeSpec": Object {
            "differentiate": [Function],
            "kind": "ReturnTypeSpec",
          },
        },
        "returnType": Object {
          "data": Array [
            Object {
              "data": Object {
                "s": Object {
                  "data": null,
                  "kind": "string",
                },
              },
              "kind": "Object",
            },
          ],
          "kind": "Array",
        },
      },
      "secondStore" => Object {
        "kind": "HierarchicalStore",
        "name": "secondStore",
        "schema": Object {
          "data": Object {
            "s": Object {
              "data": null,
              "kind": "string",
            },
          },
          "kind": "Object",
        },
        "specName": "querySpec_secondStore",
        "typeName": "stored",
      },
      "querySpec_secondStore" => Object {
        "isConduitGenerated": true,
        "kind": "Struct",
        "name": "querySpec_secondStore",
        "schema": Object {
          "data": Object {
            "getAll": Object {
              "data": null,
              "kind": "bool",
            },
          },
          "kind": "Object",
        },
      },
    },
    "size": 5,
  },
  "schemaFactory": [Function],
}
`;

exports[`defining a store 1`] = `
Object {
  "inScope": EntityMap {
    "map": Map {
      "stored" => Object {
        "children": Object {
          "Field": Array [
            Object {
              "kind": "Field",
              "loc": Object {
                "endColNumber": 11,
                "endLineNumber": 2,
                "startColNumber": 19,
                "startLineNumber": 1,
              },
              "name": "s",
              "part": Object {
                "CompleteType": Object {
                  "differentiate": [Function],
                  "kind": "CompleteType",
                },
              },
            },
          ],
        },
        "kind": "Struct",
        "loc": Object {
          "endColNumber": 19,
          "endLineNumber": 1,
          "startColNumber": 0,
          "startLineNumber": 0,
        },
        "name": "stored",
        "schema": Object {
          "data": Object {
            "s": Object {
              "data": null,
              "kind": "string",
            },
          },
          "kind": "Object",
        },
      },
      "myFirstStore" => Object {
        "kind": "HierarchicalStore",
        "name": "myFirstStore",
        "schema": Object {
          "data": Object {
            "s": Object {
              "data": null,
              "kind": "string",
            },
          },
          "kind": "Object",
        },
        "specName": "querySpec_myFirstStore",
        "typeName": "stored",
      },
      "querySpec_myFirstStore" => Object {
        "isConduitGenerated": true,
        "kind": "Struct",
        "name": "querySpec_myFirstStore",
        "schema": Object {
          "data": Object {
            "getAll": Object {
              "data": null,
              "kind": "bool",
            },
          },
          "kind": "Object",
        },
      },
    },
    "size": 3,
  },
  "schemaFactory": [Function],
}
`;

exports[`for in loop 1`] = `
Object {
  "inScope": EntityMap {
    "map": Map {
      "Outermost" => Object {
        "children": Object {
          "Field": Array [
            Object {
              "kind": "Field",
              "loc": Object {
                "endColNumber": 16,
                "endLineNumber": 2,
                "startColNumber": 22,
                "startLineNumber": 1,
              },
              "name": "middle",
              "part": Object {
                "CompleteType": Object {
                  "differentiate": [Function],
                  "kind": "CompleteType",
                },
              },
            },
          ],
        },
        "kind": "Struct",
        "loc": Object {
          "endColNumber": 22,
          "endLineNumber": 1,
          "startColNumber": 0,
          "startLineNumber": 0,
        },
        "name": "Outermost",
        "schema": Object {
          "data": Object {
            "middle": Object {
              "data": Object {
                "inner": Object {
                  "data": Object {
                    "f": Object {
                      "data": null,
                      "kind": "string",
                    },
                  },
                  "kind": "Object",
                },
              },
              "kind": "Object",
            },
          },
          "kind": "Object",
        },
      },
      "Middle" => Object {
        "children": Object {
          "Field": Array [
            Object {
              "kind": "Field",
              "loc": Object {
                "endColNumber": 15,
                "endLineNumber": 6,
                "startColNumber": 19,
                "startLineNumber": 5,
              },
              "name": "inner",
              "part": Object {
                "CompleteType": Object {
                  "differentiate": [Function],
                  "kind": "CompleteType",
                },
              },
            },
          ],
        },
        "kind": "Struct",
        "loc": Object {
          "endColNumber": 19,
          "endLineNumber": 5,
          "startColNumber": 5,
          "startLineNumber": 3,
        },
        "name": "Middle",
        "schema": Object {
          "data": Object {
            "inner": Object {
              "data": Object {
                "f": Object {
                  "data": null,
                  "kind": "string",
                },
              },
              "kind": "Object",
            },
          },
          "kind": "Object",
        },
      },
      "Innermost" => Object {
        "children": Object {
          "Field": Array [
            Object {
              "kind": "Field",
              "loc": Object {
                "endColNumber": 11,
                "endLineNumber": 9,
                "startColNumber": 22,
                "startLineNumber": 8,
              },
              "name": "f",
              "part": Object {
                "CompleteType": Object {
                  "differentiate": [Function],
                  "kind": "CompleteType",
                },
              },
            },
          ],
        },
        "kind": "Struct",
        "loc": Object {
          "endColNumber": 22,
          "endLineNumber": 8,
          "startColNumber": 5,
          "startLineNumber": 7,
        },
        "name": "Innermost",
        "schema": Object {
          "data": Object {
            "f": Object {
              "data": null,
              "kind": "string",
            },
          },
          "kind": "Object",
        },
      },
      "getAllDataIntermediate" => Object {
        "body": Array [
          Object {
            "differentiate": [Function],
            "kind": "Statement",
          },
        ],
        "kind": "Function",
        "loc": Object {
          "endColNumber": 35,
          "endLineNumber": 12,
          "startColNumber": 5,
          "startLineNumber": 10,
        },
        "method": "POST",
        "name": "getAllDataIntermediate",
        "parameter": Object {
          "kind": "WithParam",
          "name": "input",
          "schema": Object {
            "data": Array [
              Object {
                "data": Object {
                  "middle": Object {
                    "data": Object {
                      "inner": Object {
                        "data": Object {
                          "f": Object {
                            "data": null,
                            "kind": "string",
                          },
                        },
                        "kind": "Object",
                      },
                    },
                    "kind": "Object",
                  },
                },
                "kind": "Object",
              },
            ],
            "kind": "Array",
          },
        },
        "part": Object {
          "FunctionBody": Object {
            "children": Object {
              "Statement": Array [
                Object {
                  "differentiate": [Function],
                  "kind": "Statement",
                },
              ],
            },
            "kind": "FunctionBody",
            "loc": Object {
              "endColNumber": 62,
              "endLineNumber": 12,
              "startColNumber": 61,
              "startLineNumber": 12,
            },
          },
          "Parameter": Object {
            "differentiate": [Function],
            "kind": "Parameter",
          },
          "ReturnTypeSpec": Object {
            "differentiate": [Function],
            "kind": "ReturnTypeSpec",
          },
        },
        "returnType": Object {
          "kind": "VoidReturnType",
        },
      },
    },
    "size": 4,
  },
  "schemaFactory": [Function],
}
`;

exports[`functions have flexible syntax 1`] = `
Object {
  "inScope": EntityMap {
    "map": Map {
      "stored" => Object {
        "children": Object {
          "Field": Array [
            Object {
              "kind": "Field",
              "loc": Object {
                "endColNumber": 11,
                "endLineNumber": 2,
                "startColNumber": 19,
                "startLineNumber": 1,
              },
              "name": "s",
              "part": Object {
                "CompleteType": Object {
                  "differentiate": [Function],
                  "kind": "CompleteType",
                },
              },
            },
          ],
        },
        "kind": "Struct",
        "loc": Object {
          "endColNumber": 19,
          "endLineNumber": 1,
          "startColNumber": 0,
          "startLineNumber": 0,
        },
        "name": "stored",
        "schema": Object {
          "data": Object {
            "s": Object {
              "data": null,
              "kind": "string",
            },
          },
          "kind": "Object",
        },
      },
      "getAllData" => Object {
        "body": Array [
          Object {
            "differentiate": [Function],
            "kind": "Statement",
          },
        ],
        "kind": "Function",
        "loc": Object {
          "endColNumber": 23,
          "endLineNumber": 7,
          "startColNumber": 35,
          "startLineNumber": 5,
        },
        "method": "GET",
        "name": "getAllData",
        "parameter": Object {
          "kind": "NoParameter",
          "loc": Object {
            "endColNumber": 25,
            "endLineNumber": 7,
            "startColNumber": 23,
            "startLineNumber": 7,
          },
        },
        "part": Object {
          "FunctionBody": Object {
            "children": Object {
              "Statement": Array [
                Object {
                  "differentiate": [Function],
                  "kind": "Statement",
                },
              ],
            },
            "kind": "FunctionBody",
            "loc": Object {
              "endColNumber": 42,
              "endLineNumber": 7,
              "startColNumber": 40,
              "startLineNumber": 7,
            },
          },
          "Parameter": Object {
            "differentiate": [Function],
            "kind": "Parameter",
          },
          "ReturnTypeSpec": Object {
            "differentiate": [Function],
            "kind": "ReturnTypeSpec",
          },
        },
        "returnType": Object {
          "data": Array [
            Object {
              "data": Object {
                "s": Object {
                  "data": null,
                  "kind": "string",
                },
              },
              "kind": "Object",
            },
          ],
          "kind": "Array",
        },
      },
      "secondStore" => Object {
        "kind": "HierarchicalStore",
        "name": "secondStore",
        "schema": Object {
          "data": Object {
            "s": Object {
              "data": null,
              "kind": "string",
            },
          },
          "kind": "Object",
        },
        "specName": "querySpec_secondStore",
        "typeName": "stored",
      },
      "querySpec_secondStore" => Object {
        "isConduitGenerated": true,
        "kind": "Struct",
        "name": "querySpec_secondStore",
        "schema": Object {
          "data": Object {
            "getAll": Object {
              "data": null,
              "kind": "bool",
            },
          },
          "kind": "Object",
        },
      },
    },
    "size": 4,
  },
  "schemaFactory": [Function],
}
`;

exports[`getting all data from store 1`] = `
Object {
  "inScope": EntityMap {
    "map": Map {
      "stored" => Object {
        "children": Object {
          "Field": Array [
            Object {
              "kind": "Field",
              "loc": Object {
                "endColNumber": 11,
                "endLineNumber": 2,
                "startColNumber": 19,
                "startLineNumber": 1,
              },
              "name": "s",
              "part": Object {
                "CompleteType": Object {
                  "differentiate": [Function],
                  "kind": "CompleteType",
                },
              },
            },
          ],
        },
        "kind": "Struct",
        "loc": Object {
          "endColNumber": 19,
          "endLineNumber": 1,
          "startColNumber": 0,
          "startLineNumber": 0,
        },
        "name": "stored",
        "schema": Object {
          "data": Object {
            "s": Object {
              "data": null,
              "kind": "string",
            },
          },
          "kind": "Object",
        },
      },
      "getAllData" => Object {
        "body": Array [
          Object {
            "differentiate": [Function],
            "kind": "Statement",
          },
        ],
        "kind": "Function",
        "loc": Object {
          "endColNumber": 23,
          "endLineNumber": 7,
          "startColNumber": 35,
          "startLineNumber": 5,
        },
        "method": "GET",
        "name": "getAllData",
        "parameter": Object {
          "kind": "NoParameter",
          "loc": Object {
            "endColNumber": 25,
            "endLineNumber": 7,
            "startColNumber": 23,
            "startLineNumber": 7,
          },
        },
        "part": Object {
          "FunctionBody": Object {
            "children": Object {
              "Statement": Array [
                Object {
                  "differentiate": [Function],
                  "kind": "Statement",
                },
              ],
            },
            "kind": "FunctionBody",
            "loc": Object {
              "endColNumber": 41,
              "endLineNumber": 7,
              "startColNumber": 39,
              "startLineNumber": 7,
            },
          },
          "Parameter": Object {
            "differentiate": [Function],
            "kind": "Parameter",
          },
          "ReturnTypeSpec": Object {
            "differentiate": [Function],
            "kind": "ReturnTypeSpec",
          },
        },
        "returnType": Object {
          "data": Array [
            Object {
              "data": Object {
                "s": Object {
                  "data": null,
                  "kind": "string",
                },
              },
              "kind": "Object",
            },
          ],
          "kind": "Array",
        },
      },
      "secondStore" => Object {
        "kind": "HierarchicalStore",
        "name": "secondStore",
        "schema": Object {
          "data": Object {
            "s": Object {
              "data": null,
              "kind": "string",
            },
          },
          "kind": "Object",
        },
        "specName": "querySpec_secondStore",
        "typeName": "stored",
      },
      "querySpec_secondStore" => Object {
        "isConduitGenerated": true,
        "kind": "Struct",
        "name": "querySpec_secondStore",
        "schema": Object {
          "data": Object {
            "getAll": Object {
              "data": null,
              "kind": "bool",
            },
          },
          "kind": "Object",
        },
      },
    },
    "size": 4,
  },
  "schemaFactory": [Function],
}
`;

exports[`if statement 1`] = `
Object {
  "inScope": EntityMap {
    "map": Map {
      "withbool" => Object {
        "children": Object {
          "Field": Array [
            Object {
              "kind": "Field",
              "loc": Object {
                "endColNumber": 20,
                "endLineNumber": 2,
                "startColNumber": 21,
                "startLineNumber": 1,
              },
              "name": "returnLeft",
              "part": Object {
                "CompleteType": Object {
                  "differentiate": [Function],
                  "kind": "CompleteType",
                },
              },
            },
            Object {
              "kind": "Field",
              "loc": Object {
                "endColNumber": 14,
                "endLineNumber": 3,
                "startColNumber": 25,
                "startLineNumber": 2,
              },
              "name": "left",
              "part": Object {
                "CompleteType": Object {
                  "differentiate": [Function],
                  "kind": "CompleteType",
                },
              },
            },
            Object {
              "kind": "Field",
              "loc": Object {
                "endColNumber": 15,
                "endLineNumber": 4,
                "startColNumber": 21,
                "startLineNumber": 3,
              },
              "name": "right",
              "part": Object {
                "CompleteType": Object {
                  "differentiate": [Function],
                  "kind": "CompleteType",
                },
              },
            },
          ],
        },
        "kind": "Struct",
        "loc": Object {
          "endColNumber": 21,
          "endLineNumber": 1,
          "startColNumber": 0,
          "startLineNumber": 0,
        },
        "name": "withbool",
        "schema": Object {
          "data": Object {
            "left": Object {
              "data": null,
              "kind": "string",
            },
            "returnLeft": Object {
              "data": null,
              "kind": "bool",
            },
            "right": Object {
              "data": null,
              "kind": "string",
            },
          },
          "kind": "Object",
        },
      },
      "getAllDataIntermediate" => Object {
        "body": Array [
          Object {
            "differentiate": [Function],
            "kind": "Statement",
          },
          Object {
            "differentiate": [Function],
            "kind": "Statement",
          },
        ],
        "kind": "Function",
        "loc": Object {
          "endColNumber": 35,
          "endLineNumber": 7,
          "startColNumber": 5,
          "startLineNumber": 5,
        },
        "method": "POST",
        "name": "getAllDataIntermediate",
        "parameter": Object {
          "kind": "WithParam",
          "name": "input",
          "schema": Object {
            "data": Object {
              "left": Object {
                "data": null,
                "kind": "string",
              },
              "returnLeft": Object {
                "data": null,
                "kind": "bool",
              },
              "right": Object {
                "data": null,
                "kind": "string",
              },
            },
            "kind": "Object",
          },
        },
        "part": Object {
          "FunctionBody": Object {
            "children": Object {
              "Statement": Array [
                Object {
                  "differentiate": [Function],
                  "kind": "Statement",
                },
                Object {
                  "differentiate": [Function],
                  "kind": "Statement",
                },
              ],
            },
            "kind": "FunctionBody",
            "loc": Object {
              "endColNumber": 62,
              "endLineNumber": 7,
              "startColNumber": 60,
              "startLineNumber": 7,
            },
          },
          "Parameter": Object {
            "differentiate": [Function],
            "kind": "Parameter",
          },
          "ReturnTypeSpec": Object {
            "differentiate": [Function],
            "kind": "ReturnTypeSpec",
          },
        },
        "returnType": Object {
          "data": null,
          "kind": "string",
        },
      },
    },
    "size": 2,
  },
  "schemaFactory": [Function],
}
`;

exports[`references  1`] = `
Object {
  "inScope": EntityMap {
    "map": Map {
      "stored" => Object {
        "children": Object {
          "Field": Array [
            Object {
              "kind": "Field",
              "loc": Object {
                "endColNumber": 13,
                "endLineNumber": 2,
                "startColNumber": 19,
                "startLineNumber": 1,
              },
              "name": "val",
              "part": Object {
                "CompleteType": Object {
                  "differentiate": [Function],
                  "kind": "CompleteType",
                },
              },
            },
          ],
        },
        "kind": "Struct",
        "loc": Object {
          "endColNumber": 19,
          "endLineNumber": 1,
          "startColNumber": 0,
          "startLineNumber": 0,
        },
        "name": "stored",
        "schema": Object {
          "data": Object {
            "val": Object {
              "data": null,
              "kind": "string",
            },
          },
          "kind": "Object",
        },
      },
      "refTest" => Object {
        "body": Array [
          Object {
            "differentiate": [Function],
            "kind": "Statement",
          },
        ],
        "kind": "Function",
        "loc": Object {
          "endColNumber": 20,
          "endLineNumber": 7,
          "startColNumber": 35,
          "startLineNumber": 5,
        },
        "method": "POST",
        "name": "refTest",
        "parameter": Object {
          "kind": "WithParam",
          "name": "r",
          "schema": Object {
            "data": null,
            "kind": "Ref",
          },
        },
        "part": Object {
          "FunctionBody": Object {
            "children": Object {
              "Statement": Array [
                Object {
                  "differentiate": [Function],
                  "kind": "Statement",
                },
              ],
            },
            "kind": "FunctionBody",
            "loc": Object {
              "endColNumber": 61,
              "endLineNumber": 7,
              "startColNumber": 59,
              "startLineNumber": 7,
            },
          },
          "Parameter": Object {
            "differentiate": [Function],
            "kind": "Parameter",
          },
          "ReturnTypeSpec": Object {
            "differentiate": [Function],
            "kind": "ReturnTypeSpec",
          },
        },
        "returnType": Object {
          "data": null,
          "kind": "Ref",
        },
      },
      "secondStore" => Object {
        "kind": "HierarchicalStore",
        "name": "secondStore",
        "schema": Object {
          "data": Object {
            "val": Object {
              "data": null,
              "kind": "string",
            },
          },
          "kind": "Object",
        },
        "specName": "querySpec_secondStore",
        "typeName": "stored",
      },
      "querySpec_secondStore" => Object {
        "isConduitGenerated": true,
        "kind": "Struct",
        "name": "querySpec_secondStore",
        "schema": Object {
          "data": Object {
            "getAll": Object {
              "data": null,
              "kind": "bool",
            },
          },
          "kind": "Object",
        },
      },
    },
    "size": 4,
  },
  "schemaFactory": [Function],
}
`;

exports[`select method 1`] = `
Object {
  "inScope": EntityMap {
    "map": Map {
      "stored" => Object {
        "children": Object {
          "Field": Array [
            Object {
              "kind": "Field",
              "loc": Object {
                "endColNumber": 13,
                "endLineNumber": 2,
                "startColNumber": 19,
                "startLineNumber": 1,
              },
              "name": "val",
              "part": Object {
                "CompleteType": Object {
                  "differentiate": [Function],
                  "kind": "CompleteType",
                },
              },
            },
          ],
        },
        "kind": "Struct",
        "loc": Object {
          "endColNumber": 19,
          "endLineNumber": 1,
          "startColNumber": 0,
          "startLineNumber": 0,
        },
        "name": "stored",
        "schema": Object {
          "data": Object {
            "val": Object {
              "data": null,
              "kind": "string",
            },
          },
          "kind": "Object",
        },
      },
      "getAllData" => Object {
        "body": Array [
          Object {
            "differentiate": [Function],
            "kind": "Statement",
          },
        ],
        "kind": "Function",
        "loc": Object {
          "endColNumber": 23,
          "endLineNumber": 7,
          "startColNumber": 35,
          "startLineNumber": 4,
        },
        "method": "GET",
        "name": "getAllData",
        "parameter": Object {
          "kind": "NoParameter",
          "loc": Object {
            "endColNumber": 25,
            "endLineNumber": 7,
            "startColNumber": 23,
            "startLineNumber": 7,
          },
        },
        "part": Object {
          "FunctionBody": Object {
            "children": Object {
              "Statement": Array [
                Object {
                  "differentiate": [Function],
                  "kind": "Statement",
                },
              ],
            },
            "kind": "FunctionBody",
            "loc": Object {
              "endColNumber": 42,
              "endLineNumber": 7,
              "startColNumber": 40,
              "startLineNumber": 7,
            },
          },
          "Parameter": Object {
            "differentiate": [Function],
            "kind": "Parameter",
          },
          "ReturnTypeSpec": Object {
            "differentiate": [Function],
            "kind": "ReturnTypeSpec",
          },
        },
        "returnType": Object {
          "data": Array [
            Object {
              "data": Object {
                "val": Object {
                  "data": null,
                  "kind": "string",
                },
              },
              "kind": "Object",
            },
          ],
          "kind": "Array",
        },
      },
      "secondStore" => Object {
        "kind": "HierarchicalStore",
        "name": "secondStore",
        "schema": Object {
          "data": Object {
            "val": Object {
              "data": null,
              "kind": "string",
            },
          },
          "kind": "Object",
        },
        "specName": "querySpec_secondStore",
        "typeName": "stored",
      },
      "querySpec_secondStore" => Object {
        "isConduitGenerated": true,
        "kind": "Struct",
        "name": "querySpec_secondStore",
        "schema": Object {
          "data": Object {
            "getAll": Object {
              "data": null,
              "kind": "bool",
            },
          },
          "kind": "Object",
        },
      },
    },
    "size": 4,
  },
  "schemaFactory": [Function],
}
`;

exports[`should allow enums 1`] = `
Object {
  "inScope": EntityMap {
    "map": Map {
      "PurchaseCategory" => Object {
        "children": Object {
          "EnumMember": Array [
            Object {
              "kind": "EnumMember",
              "loc": Object {
                "endColNumber": 22,
                "endLineNumber": 2,
                "startColNumber": 27,
                "startLineNumber": 1,
              },
              "name": "UNCATEGORIZED",
            },
            Object {
              "kind": "EnumMember",
              "loc": Object {
                "endColNumber": 12,
                "endLineNumber": 3,
                "startColNumber": 22,
                "startLineNumber": 2,
              },
              "name": "GAS",
            },
            Object {
              "kind": "EnumMember",
              "loc": Object {
                "endColNumber": 15,
                "endLineNumber": 4,
                "startColNumber": 12,
                "startLineNumber": 3,
              },
              "name": "DINING",
            },
            Object {
              "kind": "EnumMember",
              "loc": Object {
                "endColNumber": 15,
                "endLineNumber": 5,
                "startColNumber": 15,
                "startLineNumber": 4,
              },
              "name": "TRAVEL",
            },
            Object {
              "kind": "EnumMember",
              "loc": Object {
                "endColNumber": 16,
                "endLineNumber": 6,
                "startColNumber": 15,
                "startLineNumber": 5,
              },
              "name": "GROCERY",
            },
            Object {
              "kind": "EnumMember",
              "loc": Object {
                "endColNumber": 22,
                "endLineNumber": 7,
                "startColNumber": 16,
                "startLineNumber": 6,
              },
              "name": "ENTERTAINMENT",
            },
          ],
        },
        "kind": "Enum",
        "loc": Object {
          "endColNumber": 27,
          "endLineNumber": 1,
          "startColNumber": 0,
          "startLineNumber": 0,
        },
        "name": "PurchaseCategory",
      },
    },
    "size": 1,
  },
  "schemaFactory": [Function],
}
`;

exports[`should allow enums separated by whitespace 1`] = `
Object {
  "inScope": EntityMap {
    "map": Map {
      "PurchaseCategory" => Object {
        "children": Object {
          "EnumMember": Array [
            Object {
              "kind": "EnumMember",
              "loc": Object {
                "endColNumber": 0,
                "endLineNumber": 3,
                "startColNumber": 27,
                "startLineNumber": 1,
              },
              "name": "UNCATEGORIZED",
            },
            Object {
              "kind": "EnumMember",
              "loc": Object {
                "endColNumber": 0,
                "endLineNumber": 4,
                "startColNumber": 0,
                "startLineNumber": 3,
              },
              "name": "GAS",
            },
            Object {
              "kind": "EnumMember",
              "loc": Object {
                "endColNumber": 0,
                "endLineNumber": 5,
                "startColNumber": 0,
                "startLineNumber": 4,
              },
              "name": "DINING",
            },
            Object {
              "kind": "EnumMember",
              "loc": Object {
                "endColNumber": 0,
                "endLineNumber": 6,
                "startColNumber": 0,
                "startLineNumber": 5,
              },
              "name": "TRAVEL",
            },
            Object {
              "kind": "EnumMember",
              "loc": Object {
                "endColNumber": 0,
                "endLineNumber": 7,
                "startColNumber": 0,
                "startLineNumber": 6,
              },
              "name": "GROCERY",
            },
            Object {
              "kind": "EnumMember",
              "loc": Object {
                "endColNumber": 0,
                "endLineNumber": 8,
                "startColNumber": 0,
                "startLineNumber": 7,
              },
              "name": "ENTERTAINMENT",
            },
          ],
        },
        "kind": "Enum",
        "loc": Object {
          "endColNumber": 27,
          "endLineNumber": 1,
          "startColNumber": 0,
          "startLineNumber": 0,
        },
        "name": "PurchaseCategory",
      },
    },
    "size": 1,
  },
  "schemaFactory": [Function],
}
`;

exports[`should allow multiple enums separated by whitespace 1`] = `
Object {
  "inScope": EntityMap {
    "map": Map {
      "PurchaseCategory" => Object {
        "children": Object {
          "EnumMember": Array [
            Object {
              "kind": "EnumMember",
              "loc": Object {
                "endColNumber": 0,
                "endLineNumber": 3,
                "startColNumber": 27,
                "startLineNumber": 1,
              },
              "name": "UNCATEGORIZED",
            },
            Object {
              "kind": "EnumMember",
              "loc": Object {
                "endColNumber": 0,
                "endLineNumber": 4,
                "startColNumber": 0,
                "startLineNumber": 3,
              },
              "name": "GAS",
            },
            Object {
              "kind": "EnumMember",
              "loc": Object {
                "endColNumber": 0,
                "endLineNumber": 5,
                "startColNumber": 0,
                "startLineNumber": 4,
              },
              "name": "DINING",
            },
            Object {
              "kind": "EnumMember",
              "loc": Object {
                "endColNumber": 0,
                "endLineNumber": 6,
                "startColNumber": 0,
                "startLineNumber": 5,
              },
              "name": "TRAVEL",
            },
            Object {
              "kind": "EnumMember",
              "loc": Object {
                "endColNumber": 0,
                "endLineNumber": 7,
                "startColNumber": 0,
                "startLineNumber": 6,
              },
              "name": "GROCERY",
            },
            Object {
              "kind": "EnumMember",
              "loc": Object {
                "endColNumber": 0,
                "endLineNumber": 8,
                "startColNumber": 0,
                "startLineNumber": 7,
              },
              "name": "ENTERTAINMENT",
            },
          ],
        },
        "kind": "Enum",
        "loc": Object {
          "endColNumber": 27,
          "endLineNumber": 1,
          "startColNumber": 0,
          "startLineNumber": 0,
        },
        "name": "PurchaseCategory",
      },
      "OtherCategories" => Object {
        "children": Object {
          "EnumMember": Array [
            Object {
              "kind": "EnumMember",
              "loc": Object {
                "endColNumber": 0,
                "endLineNumber": 12,
                "startColNumber": 26,
                "startLineNumber": 10,
              },
              "name": "A",
            },
            Object {
              "kind": "EnumMember",
              "loc": Object {
                "endColNumber": 0,
                "endLineNumber": 13,
                "startColNumber": 0,
                "startLineNumber": 12,
              },
              "name": "B",
            },
            Object {
              "kind": "EnumMember",
              "loc": Object {
                "endColNumber": 0,
                "endLineNumber": 14,
                "startColNumber": 0,
                "startLineNumber": 13,
              },
              "name": "C",
            },
          ],
        },
        "kind": "Enum",
        "loc": Object {
          "endColNumber": 26,
          "endLineNumber": 10,
          "startColNumber": 5,
          "startLineNumber": 8,
        },
        "name": "OtherCategories",
      },
    },
    "size": 2,
  },
  "schemaFactory": [Function],
}
`;

exports[`should allow one struct to reference another 1`] = `
Object {
  "inScope": EntityMap {
    "map": Map {
      "m1" => Object {
        "children": Object {
          "Field": Array [
            Object {
              "kind": "Field",
              "loc": Object {
                "endColNumber": 11,
                "endLineNumber": 2,
                "startColNumber": 15,
                "startLineNumber": 1,
              },
              "name": "d",
              "part": Object {
                "CompleteType": Object {
                  "differentiate": [Function],
                  "kind": "CompleteType",
                },
              },
            },
            Object {
              "kind": "Field",
              "loc": Object {
                "endColNumber": 11,
                "endLineNumber": 3,
                "startColNumber": 0,
                "startLineNumber": 3,
              },
              "name": "i",
              "part": Object {
                "CompleteType": Object {
                  "differentiate": [Function],
                  "kind": "CompleteType",
                },
              },
            },
          ],
        },
        "kind": "Struct",
        "loc": Object {
          "endColNumber": 15,
          "endLineNumber": 1,
          "startColNumber": 0,
          "startLineNumber": 0,
        },
        "name": "m1",
        "schema": Object {
          "data": Object {
            "d": Object {
              "data": null,
              "kind": "double",
            },
            "i": Object {
              "data": null,
              "kind": "int",
            },
          },
          "kind": "Object",
        },
      },
      "m2" => Object {
        "children": Object {
          "Field": Array [
            Object {
              "kind": "Field",
              "loc": Object {
                "endColNumber": 18,
                "endLineNumber": 6,
                "startColNumber": 14,
                "startLineNumber": 5,
              },
              "name": "myMessag",
              "part": Object {
                "CompleteType": Object {
                  "differentiate": [Function],
                  "kind": "CompleteType",
                },
              },
            },
          ],
        },
        "kind": "Struct",
        "loc": Object {
          "endColNumber": 14,
          "endLineNumber": 5,
          "startColNumber": 5,
          "startLineNumber": 4,
        },
        "name": "m2",
        "schema": Object {
          "data": Object {
            "myMessag": Object {
              "data": Object {
                "d": Object {
                  "data": null,
                  "kind": "double",
                },
                "i": Object {
                  "data": null,
                  "kind": "int",
                },
              },
              "kind": "Object",
            },
          },
          "kind": "Object",
        },
      },
    },
    "size": 2,
  },
  "schemaFactory": [Function],
}
`;

exports[`should allow the specification of optional fields 1`] = `
Object {
  "inScope": EntityMap {
    "map": Map {
      "Mystruct" => Object {
        "children": Object {
          "Field": Array [
            Object {
              "kind": "Field",
              "loc": Object {
                "endColNumber": 11,
                "endLineNumber": 2,
                "startColNumber": 21,
                "startLineNumber": 1,
              },
              "name": "d",
              "part": Object {
                "CompleteType": Object {
                  "differentiate": [Function],
                  "kind": "CompleteType",
                },
              },
            },
            Object {
              "kind": "Field",
              "loc": Object {
                "endColNumber": 11,
                "endLineNumber": 3,
                "startColNumber": 0,
                "startLineNumber": 3,
              },
              "name": "i",
              "part": Object {
                "CompleteType": Object {
                  "differentiate": [Function],
                  "kind": "CompleteType",
                },
              },
            },
            Object {
              "kind": "Field",
              "loc": Object {
                "endColNumber": 11,
                "endLineNumber": 4,
                "startColNumber": 0,
                "startLineNumber": 4,
              },
              "name": "b",
              "part": Object {
                "CompleteType": Object {
                  "differentiate": [Function],
                  "kind": "CompleteType",
                },
              },
            },
            Object {
              "kind": "Field",
              "loc": Object {
                "endColNumber": 11,
                "endLineNumber": 5,
                "startColNumber": 0,
                "startLineNumber": 5,
              },
              "name": "s",
              "part": Object {
                "CompleteType": Object {
                  "differentiate": [Function],
                  "kind": "CompleteType",
                },
              },
            },
          ],
        },
        "kind": "Struct",
        "loc": Object {
          "endColNumber": 21,
          "endLineNumber": 1,
          "startColNumber": 0,
          "startLineNumber": 0,
        },
        "name": "Mystruct",
        "schema": Object {
          "data": Object {
            "b": Object {
              "data": Array [
                Object {
                  "data": null,
                  "kind": "bool",
                },
              ],
              "kind": "Optional",
            },
            "d": Object {
              "data": Array [
                Object {
                  "data": null,
                  "kind": "double",
                },
              ],
              "kind": "Optional",
            },
            "i": Object {
              "data": Array [
                Object {
                  "data": null,
                  "kind": "int",
                },
              ],
              "kind": "Optional",
            },
            "s": Object {
              "data": Array [
                Object {
                  "data": null,
                  "kind": "string",
                },
              ],
              "kind": "Optional",
            },
          },
          "kind": "Object",
        },
      },
    },
    "size": 1,
  },
  "schemaFactory": [Function],
}
`;

exports[`should convert multiple conduit into manifest 1`] = `
Object {
  "inScope": EntityMap {
    "map": Map {
      "m1" => Object {
        "children": Object {
          "Field": Array [
            Object {
              "kind": "Field",
              "loc": Object {
                "endColNumber": 11,
                "endLineNumber": 2,
                "startColNumber": 15,
                "startLineNumber": 1,
              },
              "name": "d",
              "part": Object {
                "CompleteType": Object {
                  "differentiate": [Function],
                  "kind": "CompleteType",
                },
              },
            },
            Object {
              "kind": "Field",
              "loc": Object {
                "endColNumber": 11,
                "endLineNumber": 3,
                "startColNumber": 0,
                "startLineNumber": 3,
              },
              "name": "i",
              "part": Object {
                "CompleteType": Object {
                  "differentiate": [Function],
                  "kind": "CompleteType",
                },
              },
            },
          ],
        },
        "kind": "Struct",
        "loc": Object {
          "endColNumber": 15,
          "endLineNumber": 1,
          "startColNumber": 0,
          "startLineNumber": 0,
        },
        "name": "m1",
        "schema": Object {
          "data": Object {
            "d": Object {
              "data": null,
              "kind": "double",
            },
            "i": Object {
              "data": null,
              "kind": "int",
            },
          },
          "kind": "Object",
        },
      },
      "m2" => Object {
        "children": Object {
          "Field": Array [
            Object {
              "kind": "Field",
              "loc": Object {
                "endColNumber": 11,
                "endLineNumber": 6,
                "startColNumber": 14,
                "startLineNumber": 5,
              },
              "name": "b",
              "part": Object {
                "CompleteType": Object {
                  "differentiate": [Function],
                  "kind": "CompleteType",
                },
              },
            },
            Object {
              "kind": "Field",
              "loc": Object {
                "endColNumber": 11,
                "endLineNumber": 7,
                "startColNumber": 0,
                "startLineNumber": 7,
              },
              "name": "s",
              "part": Object {
                "CompleteType": Object {
                  "differentiate": [Function],
                  "kind": "CompleteType",
                },
              },
            },
          ],
        },
        "kind": "Struct",
        "loc": Object {
          "endColNumber": 14,
          "endLineNumber": 5,
          "startColNumber": 5,
          "startLineNumber": 4,
        },
        "name": "m2",
        "schema": Object {
          "data": Object {
            "b": Object {
              "data": null,
              "kind": "bool",
            },
            "s": Object {
              "data": null,
              "kind": "string",
            },
          },
          "kind": "Object",
        },
      },
    },
    "size": 2,
  },
  "schemaFactory": [Function],
}
`;

exports[`should convert simple conduit into manifest 1`] = `
Object {
  "inScope": EntityMap {
    "map": Map {
      "Mystruct" => Object {
        "children": Object {
          "Field": Array [
            Object {
              "kind": "Field",
              "loc": Object {
                "endColNumber": 11,
                "endLineNumber": 2,
                "startColNumber": 21,
                "startLineNumber": 1,
              },
              "name": "d",
              "part": Object {
                "CompleteType": Object {
                  "differentiate": [Function],
                  "kind": "CompleteType",
                },
              },
            },
            Object {
              "kind": "Field",
              "loc": Object {
                "endColNumber": 11,
                "endLineNumber": 3,
                "startColNumber": 0,
                "startLineNumber": 3,
              },
              "name": "i",
              "part": Object {
                "CompleteType": Object {
                  "differentiate": [Function],
                  "kind": "CompleteType",
                },
              },
            },
            Object {
              "kind": "Field",
              "loc": Object {
                "endColNumber": 11,
                "endLineNumber": 4,
                "startColNumber": 0,
                "startLineNumber": 4,
              },
              "name": "b",
              "part": Object {
                "CompleteType": Object {
                  "differentiate": [Function],
                  "kind": "CompleteType",
                },
              },
            },
            Object {
              "kind": "Field",
              "loc": Object {
                "endColNumber": 11,
                "endLineNumber": 5,
                "startColNumber": 0,
                "startLineNumber": 5,
              },
              "name": "s",
              "part": Object {
                "CompleteType": Object {
                  "differentiate": [Function],
                  "kind": "CompleteType",
                },
              },
            },
          ],
        },
        "kind": "Struct",
        "loc": Object {
          "endColNumber": 21,
          "endLineNumber": 1,
          "startColNumber": 0,
          "startLineNumber": 0,
        },
        "name": "Mystruct",
        "schema": Object {
          "data": Object {
            "b": Object {
              "data": null,
              "kind": "bool",
            },
            "d": Object {
              "data": null,
              "kind": "double",
            },
            "i": Object {
              "data": null,
              "kind": "int",
            },
            "s": Object {
              "data": null,
              "kind": "string",
            },
          },
          "kind": "Object",
        },
      },
    },
    "size": 1,
  },
  "schemaFactory": [Function],
}
`;
